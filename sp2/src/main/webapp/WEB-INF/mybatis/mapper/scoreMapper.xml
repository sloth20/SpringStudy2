<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="score">
	<insert id="insertScore" parameterType="com.sp.score.Score">
		INSERT INTO score(hak,
		name, birth, kor, eng, mat) VALUES (
		#{hak}, #{name},
		#{birth},#{kor},#{eng},#{mat}
		)
	</insert>

	<!-- sql : 반복적인 쿼리를 작성할 때 효율적 -->
	<sql id="where-list">
		<if test="condition=='hak'">
			hak=#{keyword}
		</if>
		<if test="condition=='name'">
			INSTR(name, #{keyword}) &gt;=1
		</if>
		<if test="condition=='birth'">
			(TO_CHAR(birth, 'YYYY-MM-DD') = #{keyword}) OR(TO_CHAR(birth, 'YYYYMMDD') = #{keyword})
		</if>
	</sql>
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM score
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list" />
			</if>
		</where>
	</select>
	<select id="listScore" parameterType="map"
		resultType="com.sp.score.Score">
		SELECT hak, name, TO_CHAR(birth, 'YYYY-MM-DD') birth,
			   kor, eng, mat, kor+eng+mat tot, (kor+eng+mat)/3 ave
		FROM score
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list" />
			</if>
		</where>
		ORDER BY hak ASC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readScore" parameterType="String" resultType="com.sp.score.Score">
		SELECT hak, name, TO_CHAR(birth, 'YYYY-MM-DD') birth, kor, eng, mat
			   FROM score
			   WHERE hak = #{hak}
	</select>
	
	<update id="updateScore" parameterType="com.sp.score.Score">
		UPDATE score SET hak = #{hak}, name = #{name}, birth = #{birth}, kor = #{kor},
						 eng = #{eng}, mat = #{mat}
		WHERE hak = #{phak}
	</update>
	
	<delete id="deleteScore" parameterType="String">
		DELETE FROM score WHERE hak = #{hak}
	</delete>
	
	<delete id="deleteScoreList" parameterType="java.util.List">
		DELETE FROM score WHERE
		hak IN
		<foreach item="hak" collection="list" open="(" close=")" separator=",">
			#{hak}
		</foreach>
	</delete>
	
</mapper>